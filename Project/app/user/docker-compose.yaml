version: '3.1'

services:
  user:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: user
    restart: always
    ports:
      - '8001:8001'
    environment:
      - HTTP_PORT=8001
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=user-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=userdb
    depends_on:
      - migration
      - user-postgres
    command: ["/app", "rest"]
  migration:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: migration
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=user-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=userdb
    depends_on:
      - user-postgres
    command: [ "/app", "migrate", "up"]
  user-postgres:
    image: postgres:15-alpine
    container_name: user-postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  postgres_data: