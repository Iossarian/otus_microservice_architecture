apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: {{ .Values.user.replicaCount }}
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      initContainers:
        - name: user-migrate
          image: "{{ .Values.user.image.repository }}:{{ .Values.user.image.tag }}"
          imagePullPolicy: Always
          command: [ "/bin/sh", "-c", "/app migrate up" ]
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: user-service-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-db-credentials
                  key: password
      containers:
        - name: user-service
          image: "{{ .Values.user.image.repository }}:{{ .Values.user.image.tag }}"
          imagePullPolicy: Always
          command: [ "/app", "rest" ]
          ports:
            - containerPort: 8002
          env:
            - name: KAFKA_BROKER
              value: "kafka-controller-0.kafka-controller-headless.order.svc.cluster.local:9092"
            - name: HTTP_PORT
              value: "8002"
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: user-service-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-db-credentials
                  key: password
